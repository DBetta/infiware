<?xml version="1.0" encoding="utf-8"?>
<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.6.xsd">

    <property name="autoIncrement" value="true"/>

    <!-- function to enable timestamp generator -->
    <property name="timestampGenerator" value="current_timestamp()" dbms="mysql"/>

    <changeSet id="1" author="Denis Gitonga">
        <!-- Creates infiware users table -->
        <createTable tableName="inf_users">
            <column name="usr_code" type="bigint" autoIncrement="${autoIncrement}">
                <constraints primaryKey="true" nullable="false"/>
            </column>
            <column name="usr_email" type="varchar(250)">
                <constraints unique="true" nullable="true"/>
            </column>
            <column name="usr_username" type="varchar(50)">
                <constraints unique="true" nullable="true"/>
            </column>
            <column name="usr_password" type="varchar(150)">
                <constraints nullable="false"/>
            </column>
            <column name="usr_first_name" type="varchar(50)"/>
            <column name="usr_middle_name" type="varchar(50)"/>
            <column name="usr_last_name" type="varchar(50)"/>
            <column name="usr_contact_number" type="varchar(50)"/>
            <column name="usr_photo" type="varchar(1000)"/>
            <column name="usr_is_verified" type="boolean" defaultValue="false">
                <constraints nullable="false"/>
            </column>
            <column name="usr_is_deleted" type="boolean" defaultValue="false">
                <constraints nullable="false"/>
            </column>
            <column name="usr_is_blocked" type="boolean" defaultValue="false">
                <constraints nullable="false"/>
            </column>

            <!-- Below Tracks reference from third party integration e.g google, facebook -->
            <column name="usr_provider" type="varchar(20)" defaultValue="default"/>
            <column name="usr_provider_id" type="varchar(250)"/>

            <!-- Below columns helps in changing email and tracking last token was updated -->
            <column name="usr_new_email" type="varchar(250)"/>
            <column name="usr_credentials_updated_millis" type="${timestamp}" defaultValue="${timestampGenerator}">
                <constraints nullable="false"/>
            </column>

            <!-- Below columns are used by spring auditor and transaction locking -->
            <column name="version" type="bigint"/>
            <column name="created_by_id" type="bigint"/>
            <column name="created_date" type="timestamp"/>
            <column name="last_modified_by_id" type="bigint"/>
            <column name="last_modified_date" type="timestamp"/>
        </createTable>

        <createTable tableName="inf_roles">
            <column name="rol_code" type="bigint" autoIncrement="${autoIncrement}">
                <constraints primaryKey="true" nullable="false"/>
            </column>
            <column name="rol_name" type="varchar(100)">
                <constraints nullable="false" unique="true"/>
            </column>
            <column name="rol_description" type="varchar(500)">
                <constraints nullable="false"/>
            </column>
            <column name="rol_is_disabled" type="boolean" defaultValue="false">
                <constraints nullable="false"/>
            </column>

            <!-- Below columns are used by spring auditor and transaction locking -->
            <column name="version" type="bigint"/>
        </createTable>

        <createTable tableName="inf_permissions">
            <column name="perm_code" type="bigint" autoIncrement="${autoIncrement}">
                <constraints primaryKey="true" nullable="false"/>
            </column>
            <column name="perm_grouping" type="varchar(45)">
                <constraints nullable="false"/>
            </column>
            <column name="perm_name" type="varchar(100)">
                <constraints nullable="false" unique="true"/>
            </column>
            <column name="perm_entity_name" type="varchar(50)">
                <constraints nullable="true"/>
            </column>
            <column name="perm_action_name" type="varchar(50)">
                <constraints nullable="true"/>
            </column>
            <column name="perm_can_maker_checker" type="boolean" defaultValue="false">
                <constraints nullable="false"/>
            </column>

            <!-- Below columns are used by spring auditor and transaction locking -->
            <column name="version" type="bigint"/>
        </createTable>


        <createTable tableName="inf_user_roles">
            <column name="usr_code" type="bigint">
                <constraints nullable="false"/>
            </column>
            <column name="rol_code" type="bigint">
                <constraints nullable="false"/>
            </column>
        </createTable>

        <createTable tableName="inf_role_permissions">
            <column name="perm_code" type="bigint">
                <constraints nullable="false"/>
            </column>
            <column name="rol_code" type="bigint">
                <constraints nullable="false"/>
            </column>
        </createTable>

        <addPrimaryKey tableName="inf_user_roles" columnNames="usr_code, rol_code"/>
        <addPrimaryKey tableName="inf_role_permissions" columnNames="perm_code, rol_code"/>

        <addForeignKeyConstraint
                baseTableName="inf_user_roles"
                baseColumnNames="usr_code"
                constraintName="fk_user_roles_usr_code"
                referencedTableName="inf_users"
                referencedColumnNames="usr_code"/>

        <addForeignKeyConstraint
                baseTableName="inf_user_roles"
                baseColumnNames="rol_code"
                constraintName="fk_user_roles_rol_code"
                referencedTableName="inf_roles"
                referencedColumnNames="rol_code"/>

        <addForeignKeyConstraint
                baseTableName="inf_role_permissions"
                baseColumnNames="perm_code"
                constraintName="fk_role_permissions_perm_code"
                referencedTableName="inf_permissions"
                referencedColumnNames="perm_code"/>

        <addForeignKeyConstraint
                baseTableName="inf_role_permissions"
                baseColumnNames="rol_code"
                constraintName="fk_role_permissions_rol_code"
                referencedTableName="inf_roles"
                referencedColumnNames="rol_code"/>
    </changeSet>


    <changeSet id="2" author="Denis Gitonga" runOnChange="true">
        <loadUpdateData tableName="inf_permissions"
                        separator=";"
                        file="db/liquibase/data/permissions.csv"
                        primaryKey="perm_name">
            <column name="perm_can_maker_checker" type="boolean"/>
        </loadUpdateData>
    </changeSet>

    <changeSet id="3" author="Denis Gitonga">
        <loadData
                file="db/liquibase/data/default_user.csv"
                separator=";"
                tableName="inf_users">
            <column name="usr_is_verified" type="boolean"/>
            <column name="usr_is_deleted" type="boolean"/>
            <column name="usr_is_blocked" type="boolean"/>
        </loadData>

        <loadData
                file="db/liquibase/data/default_role.csv"
                separator=";"
                tableName="inf_roles">
            <column name="rol_is_disabled" type="boolean"/>
        </loadData>

        <sql dbms="mysql">
            insert into inf_role_permissions (perm_code, rol_code)
            values ((select inf_permissions.perm_code from inf_permissions where perm_name = 'ALL_FUNCTIONS'),
            (select inf_roles.rol_code from inf_roles where rol_name = 'Super User'));

            insert into inf_user_roles (usr_code, rol_code)
            values ((select inf_users.usr_code from inf_users where usr_email = 'admin@bomapoint.com'),
            (select inf_roles.rol_code from inf_roles where rol_name = 'Super User'));
        </sql>
    </changeSet>

</databaseChangeLog>